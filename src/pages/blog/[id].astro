---
import { type CollectionEntry, getCollection, render } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';
import Subscribe from '../../components/Subscribe.astro';
import BaseLayout from '../../layouts/BaseLayout.astro';
import { slugify } from '../../utils/common-utils';
import { sortItemsByDateDesc } from '../../utils/data-utils';

export async function getStaticPaths() {
    const posts = (await getCollection('blog')).sort(sortItemsByDateDesc);
    return posts.map((post) => ({
        params: { id: post.id },
        props: {
            post
        }
    }));
}

type Props = { post: CollectionEntry<'blog'> };

const { post } = Astro.props;
const { title, publishDate, updatedDate, excerpt, tags = [], seo } = post.data;
const { Content } = await render(post);
---

<BaseLayout title={seo?.title ?? title} description={seo?.description ?? excerpt} image={seo?.image} pageType="article" showHeader={false}>
    <article class="mb-16 sm:mb-24">
        <header class="mb-8">
            <h1 class="text-3xl leading-tight font-serif font-medium sm:text-5xl sm:leading-tight">{title}</h1>
            <div class="mt-4 text-sm">
                <FormattedDate date={publishDate} />
                {
                    updatedDate && (
                        <>
                            {' '}
                            <span>
                                (Updated on <FormattedDate date={updatedDate} />)
                            </span>
                        </>
                    )
                }
            </div>
        </header>
        <div class="max-w-none prose sm:prose-lg">
            <Content />
        </div>
        <div class="mt-8 flex flex-wrap items-center gap-6 text-sm justify-between sm:mt-12 sm:text-base">
            {
                tags.length > 0 && (
                    <div class="flex flex-wrap gap-x-5 gap-y-1 text-sm">
                        {tags.map((tag) => (
                            <a class="text-main hover:underline" href={`/tags/${slugify(tag)}`}>
                                #{tag}
                            </a>
                        ))}
                    </div>
                )
            }
        </div>
    </article>
    <Subscribe class="my-16 sm:my-24" />
</BaseLayout>
